---
### Playbook I
### Function...: Provision of a one DOCKER Container environment for testing
###
- name: Bring up a Docker Env
  hosts: localhost
  gather_facts: false
  vars:
    image_name: ualter_jenkins_{{ version | default('packaged') | replace('.','_') }}
    inventory:
      - name: "{{image_name}}"
        image: "{{ 'chrismeyers/centos6' if (version | default('packaged')) <= '1.614' else 'chrismeyers/centos7' }}"
        ports:
          - "{{port}}:8080"
        expose:
          - "{{port}}:8080"
  pre_tasks:
    - name: Version...
      debug:
        msg: "Linux...: {{inventory[0].name}} - {{inventory[0].image}} - {{version | default('packaged')}}"      
  roles:
    - role: chrismeyersfsu.provision_docker
      provision_docker_inventory: "{{inventory}}"
  tasks:
    - name: Group primary
      add_host:
        hostname: "{{item}}"
        groups: primary
      with_items:
        - "{{image_name}}"
      tags: jenkins_ujr_{{version | default('packaged')}}

### Playbook II
### Function...: Install Jenkins and Java
###
- name: Install Jenkins
  hosts: primary
  vars:
  - jenkins_hostname: localhost
    __java_packages:
        - java-1.8.0-openjdk
    jenkins_java_options: "-Djenkins.install.runSetupWizard=false"
    jenkins_admin_username: admin
    jenkins_admin_password: 1234
    #jenkins_connection_retries: 10
  pre_tasks:
    - name: Just starts...
      debug:
        msg: "Ok, let's do it now"  
    - name: upgrade all packages
      yum: name=* state=latest
    - name: Check packaged or specifically?
      set_fact:
        jenkins_version: "{{version}}"
      when: ({{ version | default('packaged') != 'packaged'}})
    - name: Jenkins version will be...
      debug:
        msg: "{{jenkins_version | default('packaged')}}"  
  roles:
    - role: geerlingguy.java
    - role: geerlingguy.jenkins

